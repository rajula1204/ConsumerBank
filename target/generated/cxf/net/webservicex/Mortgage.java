package net.webservicex;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.3
 * 2016-12-11T12:23:13.815+05:30
 * Generated source version: 3.0.3
 * 
 */
@WebServiceClient(name = "Mortgage", 
                  wsdlLocation = "file:/C:/Users/pullareddyr/Struts/ConsumerBank/src/main/resources/Mortgage.wsdl",
                  targetNamespace = "http://www.webserviceX.NET/") 
public class Mortgage extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.webserviceX.NET/", "Mortgage");
    public final static QName MortgageHttpGet = new QName("http://www.webserviceX.NET/", "MortgageHttpGet");
    public final static QName MortgageSoap12 = new QName("http://www.webserviceX.NET/", "MortgageSoap12");
    public final static QName MortgageSoap = new QName("http://www.webserviceX.NET/", "MortgageSoap");
    public final static QName MortgageHttpPost = new QName("http://www.webserviceX.NET/", "MortgageHttpPost");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/pullareddyr/Struts/ConsumerBank/src/main/resources/Mortgage.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Mortgage.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/pullareddyr/Struts/ConsumerBank/src/main/resources/Mortgage.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Mortgage(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Mortgage(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Mortgage() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public Mortgage(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public Mortgage(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public Mortgage(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns MortgageHttpGet
     */
    @WebEndpoint(name = "MortgageHttpGet")
    public MortgageHttpGet getMortgageHttpGet() {
        return super.getPort(MortgageHttpGet, MortgageHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MortgageHttpGet
     */
    @WebEndpoint(name = "MortgageHttpGet")
    public MortgageHttpGet getMortgageHttpGet(WebServiceFeature... features) {
        return super.getPort(MortgageHttpGet, MortgageHttpGet.class, features);
    }
    /**
     *
     * @return
     *     returns MortgageSoap
     */
    @WebEndpoint(name = "MortgageSoap12")
    public MortgageSoap getMortgageSoap12() {
        return super.getPort(MortgageSoap12, MortgageSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MortgageSoap
     */
    @WebEndpoint(name = "MortgageSoap12")
    public MortgageSoap getMortgageSoap12(WebServiceFeature... features) {
        return super.getPort(MortgageSoap12, MortgageSoap.class, features);
    }
    /**
     *
     * @return
     *     returns MortgageSoap
     */
    @WebEndpoint(name = "MortgageSoap")
    public MortgageSoap getMortgageSoap() {
        return super.getPort(MortgageSoap, MortgageSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MortgageSoap
     */
    @WebEndpoint(name = "MortgageSoap")
    public MortgageSoap getMortgageSoap(WebServiceFeature... features) {
        return super.getPort(MortgageSoap, MortgageSoap.class, features);
    }
    /**
     *
     * @return
     *     returns MortgageHttpPost
     */
    @WebEndpoint(name = "MortgageHttpPost")
    public MortgageHttpPost getMortgageHttpPost() {
        return super.getPort(MortgageHttpPost, MortgageHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MortgageHttpPost
     */
    @WebEndpoint(name = "MortgageHttpPost")
    public MortgageHttpPost getMortgageHttpPost(WebServiceFeature... features) {
        return super.getPort(MortgageHttpPost, MortgageHttpPost.class, features);
    }

}
